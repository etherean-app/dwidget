// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,optimize_code_size
// @generated from protobuf file "history.proto" (package "etherean.history", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
import { Amount } from "./amount";
import { Token } from "./token";
import { UserWallet } from "./user_wallet";
import { ChainID } from "./chain_id";
import { TransactionId } from "./transaction";
/**
 * @generated from protobuf message etherean.history.Cursor
 */
export interface Cursor {
    /**
     * @generated from protobuf field: optional string value = 1;
     */
    value?: string;
    /**
     * @generated from protobuf field: optional uint32 limit = 2;
     */
    limit?: number;
    /**
     * @generated from protobuf field: optional string source = 3;
     */
    source?: string;
}
/**
 * @generated from protobuf message etherean.history.HistoryEntryRequest
 */
export interface HistoryEntryRequest {
    /**
     * @generated from protobuf field: etherean.type.TransactionId tx_hash = 1;
     */
    txHash?: TransactionId;
    /**
     * @generated from protobuf field: etherean.type.ChainID chain_id = 2;
     */
    chainId: ChainID;
}
/**
 * @generated from protobuf message etherean.history.HistoryEntryResponse
 */
export interface HistoryEntryResponse {
    /**
     * @generated from protobuf field: etherean.history.HistoryEntry entry = 1;
     */
    entry?: HistoryEntry;
}
/**
 * @generated from protobuf message etherean.history.HistoryRequest
 */
export interface HistoryRequest {
    /**
     * @generated from protobuf field: etherean.type.UserWallet wallet = 1;
     */
    wallet?: UserWallet;
    /**
     * @generated from protobuf field: etherean.history.Filter filter = 2;
     */
    filter?: Filter;
    /**
     * @generated from protobuf field: etherean.history.Cursor cursor = 3;
     */
    cursor?: Cursor;
}
/**
 * @generated from protobuf message etherean.history.Filter
 */
export interface Filter {
    /**
     * @generated from protobuf field: etherean.type.ChainID chain_id = 1;
     */
    chainId: ChainID;
    /**
     * @generated from protobuf field: etherean.history.FilterStatus status = 2;
     */
    status: FilterStatus;
}
/**
 * @generated from protobuf message etherean.history.HistoryResponse
 */
export interface HistoryResponse {
    /**
     * @generated from protobuf field: repeated etherean.history.HistoryEntry entries = 1;
     */
    entries: HistoryEntry[];
    /**
     * @generated from protobuf field: etherean.history.Cursor cursor = 2;
     */
    cursor?: Cursor;
}
/**
 * @generated from protobuf message etherean.history.Transfer
 */
export interface Transfer {
    /**
     * @generated from protobuf field: etherean.type.Token token = 1;
     */
    token?: Token;
    /**
     * @generated from protobuf field: etherean.type.Amount amount = 2;
     */
    amount?: Amount;
    /**
     * @generated from protobuf field: etherean.type.UserWallet from = 3;
     */
    from?: UserWallet;
    /**
     * @generated from protobuf field: etherean.type.UserWallet to = 4;
     */
    to?: UserWallet;
}
/**
 * TODO: Update type after output format is known
 *
 * @generated from protobuf message etherean.history.HistoryEntry
 */
export interface HistoryEntry {
    /**
     * @generated from protobuf field: etherean.type.TransactionId tx_hash = 1;
     */
    txHash?: TransactionId;
    /**
     * @generated from protobuf field: string tx_url = 2;
     */
    txUrl: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 3;
     */
    timestamp?: Timestamp;
    /**
     * @generated from protobuf field: etherean.history.EntryCategory category = 4;
     */
    category: EntryCategory;
    /**
     * @generated from protobuf field: etherean.history.EntryStatus status = 5;
     */
    status: EntryStatus;
    /**
     * @generated from protobuf field: repeated etherean.history.Transfer transfers = 6;
     */
    transfers: Transfer[];
}
/**
 * @generated from protobuf enum etherean.history.FilterStatus
 */
export enum FilterStatus {
    /**
     * @generated from protobuf enum value: FILTER_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: FILTER_STATUS_CONFIRMED = 1;
     */
    CONFIRMED = 1,
    /**
     * @generated from protobuf enum value: FILTER_STATUS_PENDING = 2;
     */
    PENDING = 2
}
/**
 * @generated from protobuf enum etherean.history.EntryStatus
 */
export enum EntryStatus {
    /**
     * @generated from protobuf enum value: ENTRY_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ENTRY_STATUS_CONFIRMED = 1;
     */
    CONFIRMED = 1,
    /**
     * @generated from protobuf enum value: ENTRY_STATUS_PENDING = 2;
     */
    PENDING = 2,
    /**
     * @generated from protobuf enum value: ENTRY_STATUS_FAILED = 3;
     */
    FAILED = 3
}
/**
 * @generated from protobuf enum etherean.history.EntryCategory
 */
export enum EntryCategory {
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_APPROVED = 1;
     */
    APPROVED = 1,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_BORROWED = 2;
     */
    BORROWED = 2,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_BURNED = 3;
     */
    BURNED = 3,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_CANCELLED = 4;
     */
    CANCELLED = 4,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_CLAIMED = 5;
     */
    CLAIMED = 5,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_DEPLOYED = 6;
     */
    DEPLOYED = 6,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_DEPOSITED = 7;
     */
    DEPOSITED = 7,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_EXECUTED = 8;
     */
    EXECUTED = 8,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_MINTED = 9;
     */
    MINTED = 9,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_RECEIVED = 10;
     */
    RECEIVED = 10,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_REPAID = 11;
     */
    REPAID = 11,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_SENT = 12;
     */
    SENT = 12,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_STAKED = 13;
     */
    STAKED = 13,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_SWAPPED = 14;
     */
    SWAPPED = 14,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_UNSTAKED = 15;
     */
    UNSTAKED = 15,
    /**
     * @generated from protobuf enum value: ENTRY_CATEGORY_WITHDRAWN = 16;
     */
    WITHDRAWN = 16
}
// @generated message type with reflection information, may provide speed optimized methods
class Cursor$Type extends MessageType<Cursor> {
    constructor() {
        super("etherean.history.Cursor", [
            { no: 1, name: "value", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "source", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.Cursor
 */
export const Cursor = new Cursor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryEntryRequest$Type extends MessageType<HistoryEntryRequest> {
    constructor() {
        super("etherean.history.HistoryEntryRequest", [
            { no: 1, name: "tx_hash", kind: "message", T: () => TransactionId },
            { no: 2, name: "chain_id", kind: "enum", T: () => ["etherean.type.ChainID", ChainID] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.HistoryEntryRequest
 */
export const HistoryEntryRequest = new HistoryEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryEntryResponse$Type extends MessageType<HistoryEntryResponse> {
    constructor() {
        super("etherean.history.HistoryEntryResponse", [
            { no: 1, name: "entry", kind: "message", T: () => HistoryEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.HistoryEntryResponse
 */
export const HistoryEntryResponse = new HistoryEntryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryRequest$Type extends MessageType<HistoryRequest> {
    constructor() {
        super("etherean.history.HistoryRequest", [
            { no: 1, name: "wallet", kind: "message", T: () => UserWallet },
            { no: 2, name: "filter", kind: "message", T: () => Filter },
            { no: 3, name: "cursor", kind: "message", T: () => Cursor }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.HistoryRequest
 */
export const HistoryRequest = new HistoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Filter$Type extends MessageType<Filter> {
    constructor() {
        super("etherean.history.Filter", [
            { no: 1, name: "chain_id", kind: "enum", T: () => ["etherean.type.ChainID", ChainID] },
            { no: 2, name: "status", kind: "enum", T: () => ["etherean.history.FilterStatus", FilterStatus, "FILTER_STATUS_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.Filter
 */
export const Filter = new Filter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryResponse$Type extends MessageType<HistoryResponse> {
    constructor() {
        super("etherean.history.HistoryResponse", [
            { no: 1, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => HistoryEntry },
            { no: 2, name: "cursor", kind: "message", T: () => Cursor }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.HistoryResponse
 */
export const HistoryResponse = new HistoryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Transfer$Type extends MessageType<Transfer> {
    constructor() {
        super("etherean.history.Transfer", [
            { no: 1, name: "token", kind: "message", T: () => Token },
            { no: 2, name: "amount", kind: "message", T: () => Amount },
            { no: 3, name: "from", kind: "message", T: () => UserWallet },
            { no: 4, name: "to", kind: "message", T: () => UserWallet }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.Transfer
 */
export const Transfer = new Transfer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryEntry$Type extends MessageType<HistoryEntry> {
    constructor() {
        super("etherean.history.HistoryEntry", [
            { no: 1, name: "tx_hash", kind: "message", T: () => TransactionId },
            { no: 2, name: "tx_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 4, name: "category", kind: "enum", T: () => ["etherean.history.EntryCategory", EntryCategory, "ENTRY_CATEGORY_"] },
            { no: 5, name: "status", kind: "enum", T: () => ["etherean.history.EntryStatus", EntryStatus, "ENTRY_STATUS_"] },
            { no: 6, name: "transfers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Transfer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.history.HistoryEntry
 */
export const HistoryEntry = new HistoryEntry$Type();
/**
 * @generated ServiceType for protobuf service etherean.history.HistoryService
 */
export const HistoryService = new ServiceType("etherean.history.HistoryService", [
    { name: "GetWalletHistory", options: {}, I: HistoryRequest, O: HistoryResponse },
    { name: "GetWalletHistoryEntry", options: {}, I: HistoryEntryRequest, O: HistoryEntryResponse }
]);
