// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,optimize_code_size
// @generated from protobuf file "etherean.proto" (package "etherean", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { TokenInfo } from "./uniswap";
import { TokenFilter } from "./uniswap";
import { Money } from "./money";
import { Decimal } from "./decimal";
import { UserWallet } from "./user_wallet";
/**
 * @generated from protobuf message etherean.LidoRewardsRequest
 */
export interface LidoRewardsRequest {
    /**
     * @generated from protobuf field: etherean.type.UserWallet user_wallet = 1;
     */
    userWallet?: UserWallet;
    /**
     * @generated from protobuf field: optional uint32 limit = 2;
     */
    limit?: number; // count of days for calculate rewards e.g.
}
/**
 * @generated from protobuf message etherean.LidoRewardsWidgetReply
 */
export interface LidoRewardsWidgetReply {
    /**
     * @generated from protobuf field: google.type.Decimal steth_rewarded = 1;
     */
    stethRewarded?: Decimal;
    /**
     * @generated from protobuf field: google.type.Money steth_rewarded_in_usd = 2;
     */
    stethRewardedInUsd?: Money;
    /**
     * @generated from protobuf field: google.type.Decimal apr = 3;
     */
    apr?: Decimal;
    /**
     * @generated from protobuf field: google.type.Decimal average_apr = 4;
     */
    averageApr?: Decimal;
}
/**
 * @generated from protobuf message etherean.UniswapRewardsRequest
 */
export interface UniswapRewardsRequest {
    /**
     * @generated from protobuf field: etherean.type.UserWallet user_wallet = 1;
     */
    userWallet?: UserWallet;
    /**
     * list of tokens e.g. ["ETH", "DAI", "USDC"]
     *
     * @generated from protobuf field: repeated etherean.uniswap.TokenFilter tokens = 2;
     */
    tokens: TokenFilter[];
}
/**
 * @generated from protobuf message etherean.UniswapRewardsWidgetReply
 */
export interface UniswapRewardsWidgetReply {
    /**
     * @generated from protobuf field: map<string, etherean.uniswap.TokenInfo> tokens = 1;
     */
    tokens: {
        [key: string]: TokenInfo;
    };
    /**
     * @generated from protobuf field: google.type.Money deposited_amount_fiat = 2;
     */
    depositedAmountFiat?: Money;
    /**
     * @generated from protobuf field: google.type.Money collected_rewards_fiat = 3;
     */
    collectedRewardsFiat?: Money;
    /**
     * @generated from protobuf field: google.type.Money withdrawn_rewards_fiat = 4;
     */
    withdrawnRewardsFiat?: Money;
}
// @generated message type with reflection information, may provide speed optimized methods
class LidoRewardsRequest$Type extends MessageType<LidoRewardsRequest> {
    constructor() {
        super("etherean.LidoRewardsRequest", [
            { no: 1, name: "user_wallet", kind: "message", T: () => UserWallet },
            { no: 2, name: "limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.LidoRewardsRequest
 */
export const LidoRewardsRequest = new LidoRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LidoRewardsWidgetReply$Type extends MessageType<LidoRewardsWidgetReply> {
    constructor() {
        super("etherean.LidoRewardsWidgetReply", [
            { no: 1, name: "steth_rewarded", kind: "message", T: () => Decimal },
            { no: 2, name: "steth_rewarded_in_usd", kind: "message", T: () => Money },
            { no: 3, name: "apr", kind: "message", T: () => Decimal },
            { no: 4, name: "average_apr", kind: "message", T: () => Decimal }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.LidoRewardsWidgetReply
 */
export const LidoRewardsWidgetReply = new LidoRewardsWidgetReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UniswapRewardsRequest$Type extends MessageType<UniswapRewardsRequest> {
    constructor() {
        super("etherean.UniswapRewardsRequest", [
            { no: 1, name: "user_wallet", kind: "message", T: () => UserWallet },
            { no: 2, name: "tokens", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TokenFilter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.UniswapRewardsRequest
 */
export const UniswapRewardsRequest = new UniswapRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UniswapRewardsWidgetReply$Type extends MessageType<UniswapRewardsWidgetReply> {
    constructor() {
        super("etherean.UniswapRewardsWidgetReply", [
            { no: 1, name: "tokens", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => TokenInfo } },
            { no: 2, name: "deposited_amount_fiat", kind: "message", T: () => Money },
            { no: 3, name: "collected_rewards_fiat", kind: "message", T: () => Money },
            { no: 4, name: "withdrawn_rewards_fiat", kind: "message", T: () => Money }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message etherean.UniswapRewardsWidgetReply
 */
export const UniswapRewardsWidgetReply = new UniswapRewardsWidgetReply$Type();
/**
 * @generated ServiceType for protobuf service etherean.EthereanGrpc
 */
export const EthereanGrpc = new ServiceType("etherean.EthereanGrpc", [
    { name: "GetLidoRewardsWidget", options: {}, I: LidoRewardsRequest, O: LidoRewardsWidgetReply },
    { name: "GetUniswapRewardsWidget", options: {}, I: UniswapRewardsRequest, O: UniswapRewardsWidgetReply }
]);
